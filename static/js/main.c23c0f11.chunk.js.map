{"version":3,"sources":["lib/Helpers.js","components/home/Home.js","components/projects/Projects.js","components/experiences/Experiences.js","components/home/Navbar.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["getRealPathname","pathname","window","location","includes","replace","Home","props","useState","scrollTop","setScrollTop","displaySkills","setDisplaySkills","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","Fragment","className","size","icon","src","href","rel","type","span","to","onClick","changeNavbarActive","isMobile","scrollY","Projects","Experiences","Navbar","handleNavbarClick","selectedKeys","current","mode","theme","Item","key","Router","setCurrent","component","exact","path","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c23c0f11.chunk.js","sourcesContent":["export const getRealPathname = () => {\n  const pathname = window.location.pathname;\n  const realPathname = pathname.includes(\"portfolio\") ? pathname.replace(\"/portfolio/\", \"\") : pathname.replace(/\\//g, \"\");\n  return realPathname;\n}\n\nexport const getRealRoute = () => {\n  return window.location.pathname.replace(/\\//g, \"\");\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\nimport { Avatar, Icon, Row, Col } from 'antd';\nimport { getRealRoute } from '../../lib/Helpers';\n\nconst Home = (props) => {\n  const [scrollTop, setScrollTop] = useState(0);\n  const [displaySkills, setDisplaySkills] = useState(false);\n\n  const getSkills = () => {\n    if (!isMobile || displaySkills) {\n      return null;\n    }\n    if (window.scrollY > 120 && !displaySkills) {\n      setDisplaySkills(true);\n      return null;\n    }\n    return \"vanished\";\n  }\n\n  useEffect(() => {\n    const onScroll = e => {\n      setScrollTop(e.target.documentElement.scrollTop);\n    };\n\n    if (!displaySkills) {\n      window.addEventListener(\"scroll\", onScroll);\n    }\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [scrollTop, displaySkills]);\n\n  return (\n    <React.Fragment>\n      <div className=\"home\">\n        <div className=\"profile-picture\">\n          <Avatar size={125} icon=\"user\" src={getRealRoute() === \"portfolio\" ? `/portfolio/images/profile-picture.jpg` : `/images/profile-picture.jpg`}/>\n        </div>\n        <div className=\"name\">\n          <span>Syamsul Mohd Jafri</span>\n        </div>\n        <div className=\"job\">\n          Full Stack Software Engineer\n        </div>\n        <div className=\"social-media\">\n          <a href=\"https://www.linkedin.com/in/syamsul-mohd-jafri-3370a1158/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <span>\n              <Icon type=\"linkedin\"></Icon>\n            </span>\n          </a>\n          <a href=\"https://github.com/syamsulmj\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <span>\n              <Icon type=\"github\"></Icon>\n            </span>\n          </a>\n          <a href=\"mailto:syamsulmj94@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <span>\n              <Icon type=\"mail\"></Icon>\n            </span>\n          </a>\n        </div>\n      </div>\n      <div className=\"about-me\">\n        <Row className=\"custom-row\">\n          <Col span={12}>\n            <div className=\"title\">\n              <span>About me</span>\n            </div>\n            <div className=\"description\">\n              I am an ambitious, extra hardworking, committed and a self-taught person.\n              I have a vast knowledge in programming skills. My specialities field are more into web development\n              and also have a pretty strong base in programming logics.\n            </div>\n            <div className=\"title child\">\n              <span>Experience</span>\n            </div>\n            <div className=\"description\">\n              <ul>\n                <li>Fullstack Software Engineer at Naluri Hidup Sdn. Bhd.</li>\n                <li>Software Engineer (Software Graphics & Media Engineer) at Intel malaysia</li>\n                <li>Freelance Web Developer</li>\n                <li>Software Internship (web maintainer) at Fave Malaysia</li>\n              </ul>\n              <div className=\"custom-button\">\n                <Link to=\"/experiences\" className=\"btn\" onClick={() => props.changeNavbarActive(\"experiences\")}>\n                  See more details\n                  <Icon type=\"double-right\"></Icon>\n                </Link>\n              </div>\n            </div>\n          </Col>\n          <Col span={12} className={`custom-col ${getSkills()}`}>\n            <div className=\"title\">\n              <span>Technology used</span>\n            </div>\n            <div className=\"skills\">\n              <li>\n                <span className=\"skill-70\"></span><em>Elixir</em>\n              </li>\n              <li>\n                <span className=\"skill-70\"></span><em>Phoenix Framework</em>\n              </li>\n              <li>\n                <span className=\"skill-60\"></span><em>PHP</em>\n              </li>\n              <li>\n                <span className=\"skill-60\"></span><em>Laravel</em>\n              </li>\n              <li>\n                <span className=\"skill-50\"></span><em>Javascript</em>\n              </li>\n              <li>\n                <span className=\"skill-50\"></span><em>React.JS</em>\n              </li>\n              <li>\n                <span className=\"skill-50\"></span><em>Shell Script</em>\n              </li>\n              <li>\n                <span className=\"skill-50\"></span><em>Linux</em>\n              </li>\n              <li>\n                <span className=\"skill-70\"></span><em>HTML5</em>\n              </li>\n              <li>\n                <span className=\"skill-70\"></span><em>CSS/SASS</em>\n              </li>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Home;\n","import React from 'react';\n\nconst Projects = () => {\n  return (\n    <div>\n      Project this and that\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from 'react';\n\nconst Experiences = () => {\n\n  return (\n    <div className=\"experience\">\n      <div className=\"job-div\">\n        <div className=\"title\">\n          <span>Fullstack Software Engineer at Naluri Hidup Sdn. Bhd. — 2019 - Present</span>\n        </div>\n        <ul className=\"description\">\n          <div className=\"heading-description\">\n            <span>\n              I was assigned to handle the Frontend and also the Backend of our company system. My job scope mostly involved in these field:\n            </span>\n          </div>\n          <li>Creating multiple new API for the Frontend system</li>\n          <li>Improve performance issues in the Backend and also Frontend system</li>\n          <li>Design and Plan better infrastructure in code structure and also database structure wise of the existing system and for new features</li>\n          <li>Maintaining and improving existing system by fixing bugs and improving the code structure to increase it readability level and also improving it in performance wise.</li>\n          <li>Creating unit test for the code based and also creating a Postman test</li>\n          <li>Delivering new requested features for the current system</li>\n          <li>Change system’s structurized from relying based on ordering into slug unique name.</li>\n          <div className=\"heading-description child\">\n            <span className=\"special\">\n              Technology Involved:\n            </span>\n          </div>\n          <li>Elixir - (Phoenix Framework, distillery for deployment, Genserver)</li>\n          <li>ReactJS - (Redux, Hooks, React-Rekit, Material-UI, Ant design)</li>\n          <li>Postgres sql</li>\n          <li>AWS - (S3 bucket, EC2 instance, Nginx)</li>\n          <li>Firebase - (Dynamic link, Analytics)</li>\n          <li>Github - (Circle CI)</li>\n        </ul>\n      </div>\n      <div className=\"job-div\">\n        <div className=\"title\">\n          <span>Software Engineer (Software Graphics & Media Engineer) at Intel Malaysia — 2018 - 2019</span>\n        </div>\n        <ul className=\"description\">\n          <div className=\"heading-description\">\n            <span>\n              Responsible in Android and Linux Kernel and also driver level development and debugging.<br/>\n            </span>\n            <span className=\"special\">Accomplishment:</span>\n          </div>\n          <li>Bring up virtualised Android for Intel automotive platform. Which is using Android P as a guest OS for on top of Linux hypervisor.</li>\n          <li>Deploy CoreU (Core User mode) backend and frontend driver inside virtualised Android and Linux hypervisor Service OS.</li>\n          <li>Build script for Android.mk file and also shell script for compiling, replacing and also shell script for compiling, replacing and development testing.</li>\n          <li>Sustaining and maintenance for Android Display, Graphics & Media which involved the Hardware Composer, Surface Flinger and media drivers.</li>\n          <li>Implement fixes related to sepolicy, driver initialisation and defects.</li>\n          <li>Ramp up on Video Acceleration API for decode and Video Post Processing.</li>\n        </ul>\n      </div>\n      <div className=\"job-div\">\n        <div className=\"title\">\n          <span>Freelance Web Developer — 2016 - Present</span>\n        </div>\n        <ul className=\"description\">\n          <div className=\"heading-description\">\n            <span>\n              Developed and done quite decent amount of maintaining job previously.\n            </span>\n            <span className=\"special\">Development tools mostly involved:</span>\n          </div>\n          <li>Laravel</li>\n          <li>PHP</li>\n          <li>Javascript</li>\n          <li>ReactJS</li>\n          <li>IoT Projects</li>\n          <li>Elixir (Phoenix Framework)</li>\n        </ul>\n      </div>\n      <div className=\"job-div\">\n        <div className=\"title\">\n          <span>Software Internship (Web Maintainer) at Fave Malaysia — 2017</span>\n        </div>\n        <ul className=\"description\">\n          <div className=\"heading-description\">\n            <span>Was assigned to maintain their company's E-Commerce website and I was given a recognition in a team meeting for my excellent support.<br/></span>\n            <span className=\"special\">Expose to:</span>\n          </div>\n          <li>MVC STRUCTURE</li>\n          <li>PHOENIX FRAMEWORK</li>\n          <li>ELIXIR</li>\n          <li>POSTGRES DB</li>\n          <li>HTML SLIM</li>\n          <li>SCSS</li>\n          <li>SHELL SCRIPT</li>\n          <li>GIT WORKFLOW</li>\n          <li>RUBY</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Experiences;\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Menu, Icon } from \"antd\";\n\nconst Navbar = (props) => {\n  return (\n    <Menu\n      onClick={props.handleNavbarClick}\n      selectedKeys={props.current}\n      mode=\"horizontal\"\n      theme=\"dark\"\n    >\n      <Menu.Item key=\"none\">\n        <Icon type=\"api\" />\n        Syamsul MJ\n      </Menu.Item>\n      <Menu.Item key=\"home\">\n        <Link to=\"/\">\n          <Icon type=\"home\" />\n          Home\n        </Link>\n      </Menu.Item>\n      <Menu.Item key=\"experiences\">\n        <Link to=\"/experiences\">\n          <Icon type=\"area-chart\" />\n          Experiences\n        </Link>\n      </Menu.Item>\n      <Menu.Item key=\"projects\">\n        <Link to=\"/projects\">\n          <Icon type=\"project\" />\n          Projects\n        </Link>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport {\n  HashRouter as Portfolio,\n  Route,\n  Switch,\n } from 'react-router-dom';\nimport Home from './components/home/Home';\nimport Projects from './components/projects/Projects';\nimport Experiences from './components/experiences/Experiences';\nimport { getRealPathname } from './lib/Helpers';\nimport Navbar from './components/home/Navbar';\n\nconst Router = () => {\n  const [current, setCurrent] = useState(getRealPathname() === \"\" ? \"home\" : getRealPathname());\n  const handleNavbarClick = e => {\n    if (e.key !== \"none\") {\n      setCurrent(e.key);\n    }\n  };\n  const changeNavbarActive = (component) => {\n    setCurrent(component);\n  }\n\n  return (\n    <Portfolio>\n      <React.Fragment>\n        <Navbar\n            current={current}\n            handleNavbarClick={handleNavbarClick}\n          >\n        </Navbar>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={() => <Home changeNavbarActive={changeNavbarActive} /> }/>\n            <Route path=\"/experiences\" component={ Experiences }/>\n            <Route path=\"/projects\" component={ Projects }/>\n          </Switch>\n        </div>\n      </React.Fragment>\n    </Portfolio>\n  )\n}\n\nexport default Router;\n","import React from 'react';\nimport Router from './Router';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}