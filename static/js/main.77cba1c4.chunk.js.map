{"version":3,"sources":["lib/Helpers.js","components/home/Home.js","components/projects/Projects.js","components/home/Navbar.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["getRealPathname","pathname","window","location","includes","replace","Home","Fragment","className","size","icon","src","href","target","rel","type","span","class","Projects","Navbar","props","onClick","handleNavbarClick","selectedKeys","current","mode","theme","Item","key","to","Router","useState","setCurrent","e","exact","path","component","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77cba1c4.chunk.js","sourcesContent":["export const getRealPathname = () => {\n  const pathname = window.location.pathname;\n  const realPathname = pathname.includes(\"portfolio\") ? pathname.replace(\"/portfolio/\", \"\") : pathname.replace(/\\//g, \"\");\n  return realPathname;\n}\n\nexport const getRealRoute = () => {\n  return window.location.pathname.replace(/\\//g, \"\");\n}\n","import React from 'react';\nimport { Avatar, Icon, Row, Col } from 'antd';\nimport { getRealRoute } from '../../lib/Helpers';\n\nconst Home = () => {\n  return (\n    <React.Fragment>\n      <div className=\"home\">\n        <div className=\"profile-picture\">\n          <Avatar size={125} icon=\"user\" src={getRealRoute() === \"portfolio\" ? `/portfolio/images/profile-picture.jpg` : `/images/profile-picture.jpg`}/>\n        </div>\n        <div className=\"name\">\n          <span>Syamsul Mohd Jafri</span>\n        </div>\n        <div className=\"job\">\n          Full Stack Software Engineer\n        </div>\n        <div className=\"social-media\">\n          <a href=\"https://www.linkedin.com/in/syamsul-mohd-jafri-3370a1158/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <span>\n              <Icon type=\"linkedin\"></Icon>\n            </span>\n          </a>\n          <a href=\"https://github.com/syamsulmj\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <span>\n              <Icon type=\"github\"></Icon>\n            </span>\n          </a>\n          <a href=\"mailto:syamsulmj94@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <span>\n              <Icon type=\"mail\"></Icon>\n            </span>\n          </a>\n        </div>\n      </div>\n      <div className=\"about-me\">\n        <Row className=\"custom-row\">\n          <Col span={12}>\n            <div className=\"title\">\n              <span>About me</span>\n            </div>\n            <div className=\"description\">\n              I am an ambitious, extra hardworking, committed and a self-taught person.\n              I have a vast knowledge in programming skills. My specialities field are more into web development\n              and also have a pretty strong base in programming logics.\n            </div>\n          </Col>\n          <Col span={12} className=\"custom-col\">\n            <div className=\"title\">\n              <span>Technology used</span>\n            </div>\n            <div className=\"skills\">\n              <li>\n                <span class=\"skill-70\"></span><em>Elixir</em>\n              </li>\n              <li>\n                <span class=\"skill-70\"></span><em>Phoenix Framework</em>\n              </li>\n              <li>\n                <span class=\"skill-60\"></span><em>PHP</em>\n              </li>\n              <li>\n                <span class=\"skill-60\"></span><em>Laravel</em>\n              </li>\n              <li>\n                <span class=\"skill-50\"></span><em>Javascript</em>\n              </li>\n              <li>\n                <span class=\"skill-50\"></span><em>React.JS</em>\n              </li>\n              <li>\n                <span class=\"skill-50\"></span><em>Shell Script</em>\n              </li>\n              <li>\n                <span class=\"skill-50\"></span><em>Linux</em>\n              </li>\n              <li>\n                <span class=\"skill-70\"></span><em>HTML5</em>\n              </li>\n              <li>\n                <span class=\"skill-70\"></span><em>CSS/SASS</em>\n              </li>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Home;\n","import React from 'react';\n\nconst Projects = () => {\n  return (\n    <div>\n      Project this and that\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Menu, Icon } from \"antd\";\n\nconst Navbar = (props) => {\n  return (\n    <Menu\n      onClick={props.handleNavbarClick}\n      selectedKeys={props.current}\n      mode=\"horizontal\"\n      theme=\"dark\"\n    >\n      <Menu.Item key=\"none\">\n        <Icon type=\"api\" />\n        Syamsul MJ\n      </Menu.Item>\n      <Menu.Item key=\"home\">\n        <Link to=\"/\">\n          <Icon type=\"home\" />\n          Home\n        </Link>\n      </Menu.Item>\n      <Menu.Item key=\"projects\">\n        <Link to=\"/projects\">\n          <Icon type=\"project\" />\n          Projects\n        </Link>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport {\n  HashRouter as Portfolio,\n  Route,\n  Switch,\n } from 'react-router-dom';\nimport Home from './components/home/Home';\nimport Projects from './components/projects/Projects';\nimport { getRealPathname } from './lib/Helpers';\nimport Navbar from './components/home/Navbar';\n\nconst Router = () => {\n  const [current, setCurrent] = useState(getRealPathname() === \"\" ? \"home\" : getRealPathname());\n  const handleNavbarClick = e => {\n    if (e.key !== \"none\") {\n      setCurrent(e.key);\n    }\n  };\n\n  return (\n    <Portfolio>\n      <React.Fragment>\n        <Navbar\n            current={current}\n            handleNavbarClick={handleNavbarClick}\n          >\n        </Navbar>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={ Home }/>\n            <Route path=\"/projects\" component={ Projects }/>\n          </Switch>\n        </div>\n      </React.Fragment>\n    </Portfolio>\n  )\n}\n\nexport default Router;\n","import React from 'react';\nimport Router from './Router';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}